name: CI

on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths-ignore:
      - '**.md'
  pull_request:
    branches:
      - main
    types: [ opened, synchronize, reopened, ready_for_review ]
    paths-ignore:
      - 'art/**'
      - '**.md'

concurrency:
  group: build-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: write

jobs:
  verify:
    name: "Verify"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: setup-java
        uses: actions/setup-java@v5
        with:
          java-version: 17
          distribution: adopt

      - name: Gradle Wrapper Validation
        uses: gradle/actions/wrapper-validation@v4

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4

      - name: Binary Compatibility Validation
        run: ./gradlew apiCheck --scan

      - name: Lint
        run: ./gradlew lint --scan

  build:
    strategy:
      matrix:
        config: [
          { target: "android", os: "ubuntu-latest", tasks: ":demo:kmm:androidApp:assembleRelease", continueOnError: false },
          { target: "osx", os: "macos-latest", tasks: ":demo:kmm:desktopApp:packageDistributionForCurrentOS", continueOnError: false },
          { target: "windows", os: "windows-latest", tasks: ":demo:kmm:desktopApp:packageDistributionForCurrentOS", continueOnError: true },
          { target: "linux", os: "ubuntu-latest", tasks: ":demo:kmm:desktopApp:packageDistributionForCurrentOS", continueOnError: false }
        ]
    runs-on: ${{ matrix.config.os }}
    name: Build ${{ matrix.config.target }}
    needs: verify
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: setup-java
        uses: actions/setup-java@v5
        with:
          java-version: 17
          distribution: adopt

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4

      - name: Gradle Wrapper Validation
        uses: gradle/actions/wrapper-validation@v4

      - name: Build ${{ matrix.config.target }} targets
        continue-on-error: ${{ matrix.config.continueOnError }}
        run: ./gradlew ${{ matrix.config.tasks }} --scan
