[{"name":"class DragSelectState<Item>(val gridState: LazyGridState, initialIndex: Int, initialSelection: List<Item>)","description":"dev.jordond.dragselectcompose.DragSelectState","location":"core/dev.jordond.dragselectcompose/-drag-select-state/index.html","searchKeys":["DragSelectState","class DragSelectState<Item>(val gridState: LazyGridState, initialIndex: Int, initialSelection: List<Item>)","dev.jordond.dragselectcompose.DragSelectState"]},{"name":"constructor(gridState: LazyGridState, initialIndex: Int, initialSelection: List<Item>)","description":"dev.jordond.dragselectcompose.DragSelectState.DragSelectState","location":"core/dev.jordond.dragselectcompose/-drag-select-state/-drag-select-state.html","searchKeys":["DragSelectState","constructor(gridState: LazyGridState, initialIndex: Int, initialSelection: List<Item>)","dev.jordond.dragselectcompose.DragSelectState.DragSelectState"]},{"name":"fun <Item> Modifier.gridDragSelect(items: List<Item>, state: DragSelectState<Item>, enableAutoScroll: Boolean = true, autoScrollThreshold: Float? = null, enableHaptics: Boolean = true, hapticFeedback: HapticFeedback? = null): Modifier","description":"dev.jordond.dragselectcompose.gridDragSelect","location":"core/dev.jordond.dragselectcompose/grid-drag-select.html","searchKeys":["gridDragSelect","fun <Item> Modifier.gridDragSelect(items: List<Item>, state: DragSelectState<Item>, enableAutoScroll: Boolean = true, autoScrollThreshold: Float? = null, enableHaptics: Boolean = true, hapticFeedback: HapticFeedback? = null): Modifier","dev.jordond.dragselectcompose.gridDragSelect"]},{"name":"fun <Item> rememberDragSelectState(lazyGridState: LazyGridState = rememberLazyGridState(), initialSelection: List<Item> = emptyList()): DragSelectState<Item>","description":"dev.jordond.dragselectcompose.rememberDragSelectState","location":"core/dev.jordond.dragselectcompose/remember-drag-select-state.html","searchKeys":["rememberDragSelectState","fun <Item> rememberDragSelectState(lazyGridState: LazyGridState = rememberLazyGridState(), initialSelection: List<Item> = emptyList()): DragSelectState<Item>","dev.jordond.dragselectcompose.rememberDragSelectState"]},{"name":"fun addSelected(item: Item)","description":"dev.jordond.dragselectcompose.DragSelectState.addSelected","location":"core/dev.jordond.dragselectcompose/-drag-select-state/add-selected.html","searchKeys":["addSelected","fun addSelected(item: Item)","dev.jordond.dragselectcompose.DragSelectState.addSelected"]},{"name":"fun clear()","description":"dev.jordond.dragselectcompose.DragSelectState.clear","location":"core/dev.jordond.dragselectcompose/-drag-select-state/clear.html","searchKeys":["clear","fun clear()","dev.jordond.dragselectcompose.DragSelectState.clear"]},{"name":"fun isSelected(item: Item): Boolean","description":"dev.jordond.dragselectcompose.DragSelectState.isSelected","location":"core/dev.jordond.dragselectcompose/-drag-select-state/is-selected.html","searchKeys":["isSelected","fun isSelected(item: Item): Boolean","dev.jordond.dragselectcompose.DragSelectState.isSelected"]},{"name":"fun removeSelected(photo: Item)","description":"dev.jordond.dragselectcompose.DragSelectState.removeSelected","location":"core/dev.jordond.dragselectcompose/-drag-select-state/remove-selected.html","searchKeys":["removeSelected","fun removeSelected(photo: Item)","dev.jordond.dragselectcompose.DragSelectState.removeSelected"]},{"name":"fun updateSelected(selected: List<Item>)","description":"dev.jordond.dragselectcompose.DragSelectState.updateSelected","location":"core/dev.jordond.dragselectcompose/-drag-select-state/update-selected.html","searchKeys":["updateSelected","fun updateSelected(selected: List<Item>)","dev.jordond.dragselectcompose.DragSelectState.updateSelected"]},{"name":"object GridDragSelectDefaults","description":"dev.jordond.dragselectcompose.GridDragSelectDefaults","location":"core/dev.jordond.dragselectcompose/-grid-drag-select-defaults/index.html","searchKeys":["GridDragSelectDefaults","object GridDragSelectDefaults","dev.jordond.dragselectcompose.GridDragSelectDefaults"]},{"name":"val autoScrollThreshold: Float","description":"dev.jordond.dragselectcompose.GridDragSelectDefaults.autoScrollThreshold","location":"core/dev.jordond.dragselectcompose/-grid-drag-select-defaults/auto-scroll-threshold.html","searchKeys":["autoScrollThreshold","val autoScrollThreshold: Float","dev.jordond.dragselectcompose.GridDragSelectDefaults.autoScrollThreshold"]},{"name":"val gridState: LazyGridState","description":"dev.jordond.dragselectcompose.DragSelectState.gridState","location":"core/dev.jordond.dragselectcompose/-drag-select-state/grid-state.html","searchKeys":["gridState","val gridState: LazyGridState","dev.jordond.dragselectcompose.DragSelectState.gridState"]},{"name":"val hapticsFeedback: HapticFeedback","description":"dev.jordond.dragselectcompose.GridDragSelectDefaults.hapticsFeedback","location":"core/dev.jordond.dragselectcompose/-grid-drag-select-defaults/haptics-feedback.html","searchKeys":["hapticsFeedback","val hapticsFeedback: HapticFeedback","dev.jordond.dragselectcompose.GridDragSelectDefaults.hapticsFeedback"]},{"name":"val inSelectionMode: Boolean","description":"dev.jordond.dragselectcompose.DragSelectState.inSelectionMode","location":"core/dev.jordond.dragselectcompose/-drag-select-state/in-selection-mode.html","searchKeys":["inSelectionMode","val inSelectionMode: Boolean","dev.jordond.dragselectcompose.DragSelectState.inSelectionMode"]},{"name":"val selected: List<Item>","description":"dev.jordond.dragselectcompose.DragSelectState.selected","location":"core/dev.jordond.dragselectcompose/-drag-select-state/selected.html","searchKeys":["selected","val selected: List<Item>","dev.jordond.dragselectcompose.DragSelectState.selected"]},{"name":"fun <Item> Modifier.dragSelectSemantics(dragSelectState: DragSelectState<Item>, item: Item, label: String = DEFAULT_LABEL): Modifier","description":"dev.jordond.dragselectcompose.extensions.dragSelectSemantics","location":"extensions/dev.jordond.dragselectcompose.extensions/drag-select-semantics.html","searchKeys":["dragSelectSemantics","fun <Item> Modifier.dragSelectSemantics(dragSelectState: DragSelectState<Item>, item: Item, label: String = DEFAULT_LABEL): Modifier","dev.jordond.dragselectcompose.extensions.dragSelectSemantics"]},{"name":"fun <Item> Modifier.dragSelectSemantics(dragSelectState: DragSelectState<Item>, label: String = DEFAULT_LABEL, onLongClick: () -> Unit): Modifier","description":"dev.jordond.dragselectcompose.extensions.dragSelectSemantics","location":"extensions/dev.jordond.dragselectcompose.extensions/drag-select-semantics.html","searchKeys":["dragSelectSemantics","fun <Item> Modifier.dragSelectSemantics(dragSelectState: DragSelectState<Item>, label: String = DEFAULT_LABEL, onLongClick: () -> Unit): Modifier","dev.jordond.dragselectcompose.extensions.dragSelectSemantics"]},{"name":"fun <Item> Modifier.dragSelectToggleable(state: DragSelectState<Item>, item: Item, interactionSource: MutableInteractionSource? = null): Modifier","description":"dev.jordond.dragselectcompose.extensions.dragSelectToggleable","location":"extensions/dev.jordond.dragselectcompose.extensions/drag-select-toggleable.html","searchKeys":["dragSelectToggleable","fun <Item> Modifier.dragSelectToggleable(state: DragSelectState<Item>, item: Item, interactionSource: MutableInteractionSource? = null): Modifier","dev.jordond.dragselectcompose.extensions.dragSelectToggleable"]},{"name":"fun <Item> Modifier.dragSelectToggleableItem(state: DragSelectState<Item>, item: Item, semanticsLabel: String = DEFAULT_LABEL, interactionSource: MutableInteractionSource? = null): Modifier","description":"dev.jordond.dragselectcompose.extensions.dragSelectToggleableItem","location":"extensions/dev.jordond.dragselectcompose.extensions/drag-select-toggleable-item.html","searchKeys":["dragSelectToggleableItem","fun <Item> Modifier.dragSelectToggleableItem(state: DragSelectState<Item>, item: Item, semanticsLabel: String = DEFAULT_LABEL, interactionSource: MutableInteractionSource? = null): Modifier","dev.jordond.dragselectcompose.extensions.dragSelectToggleableItem"]},{"name":"fun Modifier.dragSelectSemantics(inSelectionMode: Boolean, label: String = DEFAULT_LABEL, onLongClick: () -> Unit): Modifier","description":"dev.jordond.dragselectcompose.extensions.dragSelectSemantics","location":"extensions/dev.jordond.dragselectcompose.extensions/drag-select-semantics.html","searchKeys":["dragSelectSemantics","fun Modifier.dragSelectSemantics(inSelectionMode: Boolean, label: String = DEFAULT_LABEL, onLongClick: () -> Unit): Modifier","dev.jordond.dragselectcompose.extensions.dragSelectSemantics"]},{"name":"fun Modifier.dragSelectToggleable(inSelectionMode: Boolean, selected: Boolean, interactionSource: MutableInteractionSource? = null, onToggle: (toggled: Boolean) -> Unit): Modifier","description":"dev.jordond.dragselectcompose.extensions.dragSelectToggleable","location":"extensions/dev.jordond.dragselectcompose.extensions/drag-select-toggleable.html","searchKeys":["dragSelectToggleable","fun Modifier.dragSelectToggleable(inSelectionMode: Boolean, selected: Boolean, interactionSource: MutableInteractionSource? = null, onToggle: (toggled: Boolean) -> Unit): Modifier","dev.jordond.dragselectcompose.extensions.dragSelectToggleable"]},{"name":"abstract fun item(key: Any? = null, span: LazyGridItemSpanScope.() -> GridItemSpan? = null, contentType: Any? = null, content: LazyDragSelectGridItemScope<Item>.() -> Unit)","description":"dev.jordond.dragselectcompose.grid.LazyDragSelectGridScope.item","location":"grid/dev.jordond.dragselectcompose.grid/-lazy-drag-select-grid-scope/item.html","searchKeys":["item","abstract fun item(key: Any? = null, span: LazyGridItemSpanScope.() -> GridItemSpan? = null, contentType: Any? = null, content: LazyDragSelectGridItemScope<Item>.() -> Unit)","dev.jordond.dragselectcompose.grid.LazyDragSelectGridScope.item"]},{"name":"abstract fun items(key: (item: Item) -> Any? = null, span: LazyGridItemSpanScope.(item: Item) -> GridItemSpan? = null, contentType: (item: Item) -> Any? = { null }, itemContent: LazyDragSelectGridItemScope<Item>.(item: Item) -> Unit)","description":"dev.jordond.dragselectcompose.grid.LazyDragSelectGridScope.items","location":"grid/dev.jordond.dragselectcompose.grid/-lazy-drag-select-grid-scope/items.html","searchKeys":["items","abstract fun items(key: (item: Item) -> Any? = null, span: LazyGridItemSpanScope.(item: Item) -> GridItemSpan? = null, contentType: (item: Item) -> Any? = { null }, itemContent: LazyDragSelectGridItemScope<Item>.(item: Item) -> Unit)","dev.jordond.dragselectcompose.grid.LazyDragSelectGridScope.items"]},{"name":"class LazyDragSelectGridItemScope<Item>(state: DragSelectState<Item>, lazyGridItemScope: LazyGridItemScope)","description":"dev.jordond.dragselectcompose.grid.LazyDragSelectGridItemScope","location":"grid/dev.jordond.dragselectcompose.grid/-lazy-drag-select-grid-item-scope/index.html","searchKeys":["LazyDragSelectGridItemScope","class LazyDragSelectGridItemScope<Item>(state: DragSelectState<Item>, lazyGridItemScope: LazyGridItemScope)","dev.jordond.dragselectcompose.grid.LazyDragSelectGridItemScope"]},{"name":"constructor(icon: ImageVector, tint: Color, contentDescription: String?, padding: Dp, backgroundColor: Color?, border: Dp?, shape: Shape?)","description":"dev.jordond.dragselectcompose.grid.indicator.IndicatorIconOptions.IndicatorIconOptions","location":"grid/dev.jordond.dragselectcompose.grid.indicator/-indicator-icon-options/-indicator-icon-options.html","searchKeys":["IndicatorIconOptions","constructor(icon: ImageVector, tint: Color, contentDescription: String?, padding: Dp, backgroundColor: Color?, border: Dp?, shape: Shape?)","dev.jordond.dragselectcompose.grid.indicator.IndicatorIconOptions.IndicatorIconOptions"]},{"name":"constructor(padding: Dp, cornerRadius: Dp)","description":"dev.jordond.dragselectcompose.grid.indicator.AnimateSelectionOptions.AnimateSelectionOptions","location":"grid/dev.jordond.dragselectcompose.grid.indicator/-animate-selection-options/-animate-selection-options.html","searchKeys":["AnimateSelectionOptions","constructor(padding: Dp, cornerRadius: Dp)","dev.jordond.dragselectcompose.grid.indicator.AnimateSelectionOptions.AnimateSelectionOptions"]},{"name":"constructor(state: DragSelectState<Item>, lazyGridItemScope: LazyGridItemScope)","description":"dev.jordond.dragselectcompose.grid.LazyDragSelectGridItemScope.LazyDragSelectGridItemScope","location":"grid/dev.jordond.dragselectcompose.grid/-lazy-drag-select-grid-item-scope/-lazy-drag-select-grid-item-scope.html","searchKeys":["LazyDragSelectGridItemScope","constructor(state: DragSelectState<Item>, lazyGridItemScope: LazyGridItemScope)","dev.jordond.dragselectcompose.grid.LazyDragSelectGridItemScope.LazyDragSelectGridItemScope"]},{"name":"data class AnimateSelectionOptions(val padding: Dp, val cornerRadius: Dp)","description":"dev.jordond.dragselectcompose.grid.indicator.AnimateSelectionOptions","location":"grid/dev.jordond.dragselectcompose.grid.indicator/-animate-selection-options/index.html","searchKeys":["AnimateSelectionOptions","data class AnimateSelectionOptions(val padding: Dp, val cornerRadius: Dp)","dev.jordond.dragselectcompose.grid.indicator.AnimateSelectionOptions"]},{"name":"data class IndicatorIconOptions(val icon: ImageVector, val tint: Color, val contentDescription: String?, val padding: Dp, val backgroundColor: Color?, val border: Dp?, val shape: Shape?)","description":"dev.jordond.dragselectcompose.grid.indicator.IndicatorIconOptions","location":"grid/dev.jordond.dragselectcompose.grid.indicator/-indicator-icon-options/index.html","searchKeys":["IndicatorIconOptions","data class IndicatorIconOptions(val icon: ImageVector, val tint: Color, val contentDescription: String?, val padding: Dp, val backgroundColor: Color?, val border: Dp?, val shape: Shape?)","dev.jordond.dragselectcompose.grid.indicator.IndicatorIconOptions"]},{"name":"fun <Item> LazyDragSelectHorizontalGrid(rows: GridCells, items: List<Item>, modifier: Modifier = Modifier, state: DragSelectState<Item> = rememberDragSelectState(), contentPadding: PaddingValues = PaddingValues(0.dp), reverseLayout: Boolean = false, horizontalArrangement: Arrangement.Horizontal = if (!reverseLayout) Arrangement.Start else Arrangement.End, verticalArrangement: Arrangement.Vertical = Arrangement.Top, flingBehavior: FlingBehavior = ScrollableDefaults.flingBehavior(), userScrollEnabled: Boolean = true, enableAutoScroll: Boolean = true, autoScrollThreshold: Float? = null, enableHaptics: Boolean = true, hapticFeedback: HapticFeedback? = null, content: LazyDragSelectGridScope<Item>.() -> Unit)","description":"dev.jordond.dragselectcompose.grid.LazyDragSelectHorizontalGrid","location":"grid/dev.jordond.dragselectcompose.grid/-lazy-drag-select-horizontal-grid.html","searchKeys":["LazyDragSelectHorizontalGrid","fun <Item> LazyDragSelectHorizontalGrid(rows: GridCells, items: List<Item>, modifier: Modifier = Modifier, state: DragSelectState<Item> = rememberDragSelectState(), contentPadding: PaddingValues = PaddingValues(0.dp), reverseLayout: Boolean = false, horizontalArrangement: Arrangement.Horizontal = if (!reverseLayout) Arrangement.Start else Arrangement.End, verticalArrangement: Arrangement.Vertical = Arrangement.Top, flingBehavior: FlingBehavior = ScrollableDefaults.flingBehavior(), userScrollEnabled: Boolean = true, enableAutoScroll: Boolean = true, autoScrollThreshold: Float? = null, enableHaptics: Boolean = true, hapticFeedback: HapticFeedback? = null, content: LazyDragSelectGridScope<Item>.() -> Unit)","dev.jordond.dragselectcompose.grid.LazyDragSelectHorizontalGrid"]},{"name":"fun <Item> LazyDragSelectVerticalGrid(columns: GridCells, items: List<Item>, modifier: Modifier = Modifier, state: DragSelectState<Item> = rememberDragSelectState(), contentPadding: PaddingValues = PaddingValues(0.dp), reverseLayout: Boolean = false, verticalArrangement: Arrangement.Vertical = if (!reverseLayout) Arrangement.Top else Arrangement.Bottom, horizontalArrangement: Arrangement.Horizontal = Arrangement.Start, flingBehavior: FlingBehavior = ScrollableDefaults.flingBehavior(), userScrollEnabled: Boolean = true, enableAutoScroll: Boolean = true, autoScrollThreshold: Float? = null, enableHaptics: Boolean = true, hapticFeedback: HapticFeedback? = null, content: LazyDragSelectGridScope<Item>.() -> Unit)","description":"dev.jordond.dragselectcompose.grid.LazyDragSelectVerticalGrid","location":"grid/dev.jordond.dragselectcompose.grid/-lazy-drag-select-vertical-grid.html","searchKeys":["LazyDragSelectVerticalGrid","fun <Item> LazyDragSelectVerticalGrid(columns: GridCells, items: List<Item>, modifier: Modifier = Modifier, state: DragSelectState<Item> = rememberDragSelectState(), contentPadding: PaddingValues = PaddingValues(0.dp), reverseLayout: Boolean = false, verticalArrangement: Arrangement.Vertical = if (!reverseLayout) Arrangement.Top else Arrangement.Bottom, horizontalArrangement: Arrangement.Horizontal = Arrangement.Start, flingBehavior: FlingBehavior = ScrollableDefaults.flingBehavior(), userScrollEnabled: Boolean = true, enableAutoScroll: Boolean = true, autoScrollThreshold: Float? = null, enableHaptics: Boolean = true, hapticFeedback: HapticFeedback? = null, content: LazyDragSelectGridScope<Item>.() -> Unit)","dev.jordond.dragselectcompose.grid.LazyDragSelectVerticalGrid"]},{"name":"fun LazyDragSelectGridItemScope<*>.IndicatorIcon(icon: ImageVector, tint: Color, contentDescription: String?, padding: Dp, backgroundColor: Color?, border: Dp?, shape: Shape?, modifier: Modifier = Modifier)","description":"dev.jordond.dragselectcompose.grid.indicator.IndicatorIcon","location":"grid/dev.jordond.dragselectcompose.grid.indicator/-indicator-icon.html","searchKeys":["IndicatorIcon","fun LazyDragSelectGridItemScope<*>.IndicatorIcon(icon: ImageVector, tint: Color, contentDescription: String?, padding: Dp, backgroundColor: Color?, border: Dp?, shape: Shape?, modifier: Modifier = Modifier)","dev.jordond.dragselectcompose.grid.indicator.IndicatorIcon"]},{"name":"fun LazyDragSelectGridItemScope<*>.IndicatorIcon(options: IndicatorIconOptions, modifier: Modifier = Modifier)","description":"dev.jordond.dragselectcompose.grid.indicator.IndicatorIcon","location":"grid/dev.jordond.dragselectcompose.grid.indicator/-indicator-icon.html","searchKeys":["IndicatorIcon","fun LazyDragSelectGridItemScope<*>.IndicatorIcon(options: IndicatorIconOptions, modifier: Modifier = Modifier)","dev.jordond.dragselectcompose.grid.indicator.IndicatorIcon"]},{"name":"fun LazyDragSelectGridItemScope<*>.SelectedIcon(modifier: Modifier = Modifier, options: IndicatorIconOptions = IndicatorIconDefaults.selectedIconOptions())","description":"dev.jordond.dragselectcompose.grid.indicator.SelectedIcon","location":"grid/dev.jordond.dragselectcompose.grid.indicator/-selected-icon.html","searchKeys":["SelectedIcon","fun LazyDragSelectGridItemScope<*>.SelectedIcon(modifier: Modifier = Modifier, options: IndicatorIconOptions = IndicatorIconDefaults.selectedIconOptions())","dev.jordond.dragselectcompose.grid.indicator.SelectedIcon"]},{"name":"fun LazyDragSelectGridItemScope<*>.UnselectedIcon(modifier: Modifier = Modifier, options: IndicatorIconOptions = IndicatorIconDefaults.unselectedIconOptions())","description":"dev.jordond.dragselectcompose.grid.indicator.UnselectedIcon","location":"grid/dev.jordond.dragselectcompose.grid.indicator/-unselected-icon.html","searchKeys":["UnselectedIcon","fun LazyDragSelectGridItemScope<*>.UnselectedIcon(modifier: Modifier = Modifier, options: IndicatorIconOptions = IndicatorIconDefaults.unselectedIconOptions())","dev.jordond.dragselectcompose.grid.indicator.UnselectedIcon"]},{"name":"fun Modifier.animateItemPlacement(animationSpec: FiniteAnimationSpec<IntOffset>): Modifier","description":"dev.jordond.dragselectcompose.grid.LazyDragSelectGridItemScope.animateItemPlacement","location":"grid/dev.jordond.dragselectcompose.grid/-lazy-drag-select-grid-item-scope/animate-item-placement.html","searchKeys":["animateItemPlacement","fun Modifier.animateItemPlacement(animationSpec: FiniteAnimationSpec<IntOffset>): Modifier","dev.jordond.dragselectcompose.grid.LazyDragSelectGridItemScope.animateItemPlacement"]},{"name":"fun SelectableItem(item: Item, modifier: Modifier = Modifier, semanticsLabel: String = DEFAULT_LABEL, interactionSource: MutableInteractionSource? = null, enableIconIndicator: Boolean = true, selectedIcon: BoxScope.() -> Unit = { SelectedIcon() }, unselectedIcon: BoxScope.() -> Unit = { UnselectedIcon() }, animateSelection: Boolean = true, animateSelectionOptions: AnimateSelectionOptions = AnimateSelectionDefaults.Default, aspectRatio: Float = 1.0f, content: (toggled: Boolean) -> Unit)","description":"dev.jordond.dragselectcompose.grid.LazyDragSelectGridItemScope.SelectableItem","location":"grid/dev.jordond.dragselectcompose.grid/-lazy-drag-select-grid-item-scope/-selectable-item.html","searchKeys":["SelectableItem","fun SelectableItem(item: Item, modifier: Modifier = Modifier, semanticsLabel: String = DEFAULT_LABEL, interactionSource: MutableInteractionSource? = null, enableIconIndicator: Boolean = true, selectedIcon: BoxScope.() -> Unit = { SelectedIcon() }, unselectedIcon: BoxScope.() -> Unit = { UnselectedIcon() }, animateSelection: Boolean = true, animateSelectionOptions: AnimateSelectionOptions = AnimateSelectionDefaults.Default, aspectRatio: Float = 1.0f, content: (toggled: Boolean) -> Unit)","dev.jordond.dragselectcompose.grid.LazyDragSelectGridItemScope.SelectableItem"]},{"name":"fun selectedIconOptions(icon: ImageVector = Icons.Filled.CheckCircle, tint: Color = MaterialTheme.colorScheme.primary, contentDescription: String? = \"Selected\", padding: Dp = 4.dp, backgroundColor: Color = MaterialTheme.colorScheme.surfaceColorAtElevation(3.dp), border: Dp = 2.dp, shape: Shape = IconShape): IndicatorIconOptions","description":"dev.jordond.dragselectcompose.grid.indicator.IndicatorIconDefaults.selectedIconOptions","location":"grid/dev.jordond.dragselectcompose.grid.indicator/-indicator-icon-defaults/selected-icon-options.html","searchKeys":["selectedIconOptions","fun selectedIconOptions(icon: ImageVector = Icons.Filled.CheckCircle, tint: Color = MaterialTheme.colorScheme.primary, contentDescription: String? = \"Selected\", padding: Dp = 4.dp, backgroundColor: Color = MaterialTheme.colorScheme.surfaceColorAtElevation(3.dp), border: Dp = 2.dp, shape: Shape = IconShape): IndicatorIconOptions","dev.jordond.dragselectcompose.grid.indicator.IndicatorIconDefaults.selectedIconOptions"]},{"name":"fun unselectedIconOptions(icon: ImageVector = Icons.Filled.RadioButtonUnchecked, tint: Color = Color.White.copy(alpha = 0.7f), contentDescription: String? = \"Not Selected\", padding: Dp = 4.dp): IndicatorIconOptions","description":"dev.jordond.dragselectcompose.grid.indicator.IndicatorIconDefaults.unselectedIconOptions","location":"grid/dev.jordond.dragselectcompose.grid.indicator/-indicator-icon-defaults/unselected-icon-options.html","searchKeys":["unselectedIconOptions","fun unselectedIconOptions(icon: ImageVector = Icons.Filled.RadioButtonUnchecked, tint: Color = Color.White.copy(alpha = 0.7f), contentDescription: String? = \"Not Selected\", padding: Dp = 4.dp): IndicatorIconOptions","dev.jordond.dragselectcompose.grid.indicator.IndicatorIconDefaults.unselectedIconOptions"]},{"name":"interface LazyDragSelectGridScope<Item>","description":"dev.jordond.dragselectcompose.grid.LazyDragSelectGridScope","location":"grid/dev.jordond.dragselectcompose.grid/-lazy-drag-select-grid-scope/index.html","searchKeys":["LazyDragSelectGridScope","interface LazyDragSelectGridScope<Item>","dev.jordond.dragselectcompose.grid.LazyDragSelectGridScope"]},{"name":"object AnimateSelectionDefaults","description":"dev.jordond.dragselectcompose.grid.indicator.AnimateSelectionDefaults","location":"grid/dev.jordond.dragselectcompose.grid.indicator/-animate-selection-defaults/index.html","searchKeys":["AnimateSelectionDefaults","object AnimateSelectionDefaults","dev.jordond.dragselectcompose.grid.indicator.AnimateSelectionDefaults"]},{"name":"object IndicatorIconDefaults","description":"dev.jordond.dragselectcompose.grid.indicator.IndicatorIconDefaults","location":"grid/dev.jordond.dragselectcompose.grid.indicator/-indicator-icon-defaults/index.html","searchKeys":["IndicatorIconDefaults","object IndicatorIconDefaults","dev.jordond.dragselectcompose.grid.indicator.IndicatorIconDefaults"]},{"name":"val Default: AnimateSelectionOptions","description":"dev.jordond.dragselectcompose.grid.indicator.AnimateSelectionDefaults.Default","location":"grid/dev.jordond.dragselectcompose.grid.indicator/-animate-selection-defaults/-default.html","searchKeys":["Default","val Default: AnimateSelectionOptions","dev.jordond.dragselectcompose.grid.indicator.AnimateSelectionDefaults.Default"]},{"name":"val IconShape: Shape","description":"dev.jordond.dragselectcompose.grid.indicator.IndicatorIconDefaults.IconShape","location":"grid/dev.jordond.dragselectcompose.grid.indicator/-indicator-icon-defaults/-icon-shape.html","searchKeys":["IconShape","val IconShape: Shape","dev.jordond.dragselectcompose.grid.indicator.IndicatorIconDefaults.IconShape"]},{"name":"val Icons.Filled.RadioButtonUnchecked: ImageVector","description":"dev.jordond.dragselectcompose.grid.indicator.internal.RadioButtonUnchecked","location":"grid/dev.jordond.dragselectcompose.grid.indicator.internal/-radio-button-unchecked.html","searchKeys":["RadioButtonUnchecked","val Icons.Filled.RadioButtonUnchecked: ImageVector","dev.jordond.dragselectcompose.grid.indicator.internal.RadioButtonUnchecked"]},{"name":"val backgroundColor: Color?","description":"dev.jordond.dragselectcompose.grid.indicator.IndicatorIconOptions.backgroundColor","location":"grid/dev.jordond.dragselectcompose.grid.indicator/-indicator-icon-options/background-color.html","searchKeys":["backgroundColor","val backgroundColor: Color?","dev.jordond.dragselectcompose.grid.indicator.IndicatorIconOptions.backgroundColor"]},{"name":"val border: Dp?","description":"dev.jordond.dragselectcompose.grid.indicator.IndicatorIconOptions.border","location":"grid/dev.jordond.dragselectcompose.grid.indicator/-indicator-icon-options/border.html","searchKeys":["border","val border: Dp?","dev.jordond.dragselectcompose.grid.indicator.IndicatorIconOptions.border"]},{"name":"val contentDescription: String?","description":"dev.jordond.dragselectcompose.grid.indicator.IndicatorIconOptions.contentDescription","location":"grid/dev.jordond.dragselectcompose.grid.indicator/-indicator-icon-options/content-description.html","searchKeys":["contentDescription","val contentDescription: String?","dev.jordond.dragselectcompose.grid.indicator.IndicatorIconOptions.contentDescription"]},{"name":"val cornerRadius: Dp","description":"dev.jordond.dragselectcompose.grid.indicator.AnimateSelectionOptions.cornerRadius","location":"grid/dev.jordond.dragselectcompose.grid.indicator/-animate-selection-options/corner-radius.html","searchKeys":["cornerRadius","val cornerRadius: Dp","dev.jordond.dragselectcompose.grid.indicator.AnimateSelectionOptions.cornerRadius"]},{"name":"val icon: ImageVector","description":"dev.jordond.dragselectcompose.grid.indicator.IndicatorIconOptions.icon","location":"grid/dev.jordond.dragselectcompose.grid.indicator/-indicator-icon-options/icon.html","searchKeys":["icon","val icon: ImageVector","dev.jordond.dragselectcompose.grid.indicator.IndicatorIconOptions.icon"]},{"name":"val padding: Dp","description":"dev.jordond.dragselectcompose.grid.indicator.AnimateSelectionOptions.padding","location":"grid/dev.jordond.dragselectcompose.grid.indicator/-animate-selection-options/padding.html","searchKeys":["padding","val padding: Dp","dev.jordond.dragselectcompose.grid.indicator.AnimateSelectionOptions.padding"]},{"name":"val padding: Dp","description":"dev.jordond.dragselectcompose.grid.indicator.IndicatorIconOptions.padding","location":"grid/dev.jordond.dragselectcompose.grid.indicator/-indicator-icon-options/padding.html","searchKeys":["padding","val padding: Dp","dev.jordond.dragselectcompose.grid.indicator.IndicatorIconOptions.padding"]},{"name":"val shape: Shape?","description":"dev.jordond.dragselectcompose.grid.indicator.IndicatorIconOptions.shape","location":"grid/dev.jordond.dragselectcompose.grid.indicator/-indicator-icon-options/shape.html","searchKeys":["shape","val shape: Shape?","dev.jordond.dragselectcompose.grid.indicator.IndicatorIconOptions.shape"]},{"name":"val tint: Color","description":"dev.jordond.dragselectcompose.grid.indicator.IndicatorIconOptions.tint","location":"grid/dev.jordond.dragselectcompose.grid.indicator/-indicator-icon-options/tint.html","searchKeys":["tint","val tint: Color","dev.jordond.dragselectcompose.grid.indicator.IndicatorIconOptions.tint"]}]